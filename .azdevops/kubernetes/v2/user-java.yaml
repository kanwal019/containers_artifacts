apiVersion: v1
kind: Service
metadata:
  name: user-java
  labels:
    run: user-java
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 80
      protocol: TCP
      name: http
    - port: 443
      protocol: TCP
      name: https
  selector:
    run: user-java
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-java
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-java
  template:
    metadata:
      labels:
        app: user-java
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      volumes:
        - name: secret-volume
          secret:
            secretName: nginxsecret
        - name: configmap-volume
          configMap:
            name: nginxconfigmap
      containers:
        - name: user-java
          image: registrywnq0978.azurecr.io/user-java:1.0
          env:
            - name: SQL_USER
              valueFrom:
                secretKeyRef:
                  name: sqlconfig
                  key: SQL_USER
                  optional: false
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sqlconfig
                  key: SQL_PASSWORD
                  optional: false
            - name: SQL_SERVER
              valueFrom:
                secretKeyRef:
                  name: sqlconfig
                  key: SQL_SERVER
                  optional: false
            - name: SQL_DBNAME
              valueFrom:
                secretKeyRef:
                  name: sqlconfig
                  key: SQL_DBNAME
                  optional: false
          ports:
            - containerPort: 443
            - containerPort: 80
          volumeMounts:
            - mountPath: /etc/nginx/ssl
              name: secret-volume
            - mountPath: /etc/nginx/conf.d
              name: configmap-volume
